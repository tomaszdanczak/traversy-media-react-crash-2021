{"version":3,"sources":["components/AddTask.jsx","components/Button.jsx","components/Header.jsx","components/Task.jsx","components/Tasks.jsx","components/Footer.jsx","components/About.jsx","App.js","reportWebVitals.js","index.js"],"names":["AddTask","onAddTask","useState","text","setText","day","setDay","reminder","setReminder","className","onSubmit","e","preventDefault","alert","htmlFor","type","placeholder","value","onChange","target","checked","currentTarget","Button","color","onClick","style","backgroundColor","defaultProps","Header","title","showAdd","onShowAdd","location","useLocation","pathname","process","Task","task","onDeleteTask","onToggleReminder","onDoubleClick","cursor","id","Tasks","tasks","map","Footer","to","About","App","setShowAdd","setTasks","useEffect","storageTasks","JSON","parse","localStorage","getItem","console","log","handleAddTask","newTasks","uniqid","setItem","stringify","handleDeleteTask","filter","t","handleToggleReminder","index","indexOf","path","exact","render","props","length","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f74d85a2.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nconst AddTask = ({ onAddTask }) => {\n  const [text, setText] = useState(\"\");\n  const [day, setDay] = useState(\"\");\n  const [reminder, setReminder] = useState(false);\n\n  const handleSubmitForm = (e) => {\n    e.preventDefault();\n\n    if (!text) {\n      alert(\"Please add a task\");\n      return;\n    }\n\n    const newTask = { text, day, reminder };\n    onAddTask(newTask);\n\n    setText(\"\");\n    setDay(\"\");\n    setReminder(false);\n  };\n\n  return (\n    <form className=\"add-form\" onSubmit={handleSubmitForm}>\n      <div className=\"form-control\">\n        <label htmlFor=\"\">Task</label>\n        <input\n          type=\"text\"\n          placeholder=\"Add task\"\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n        />\n      </div>\n\n      <div className=\"form-control\">\n        <label htmlFor=\"\">Day & Time</label>\n        <input\n          type=\"text\"\n          placeholder=\"Add Day & Time\"\n          value={day}\n          onChange={(e) => setDay(e.target.value)}\n        />\n      </div>\n\n      <div className=\"form-control form-control-check\">\n        <label htmlFor=\"\">Set Reminder</label>\n        <input\n          type=\"checkbox\"\n          checked={reminder}\n          onChange={(e) => setReminder(e.currentTarget.checked)}\n        />\n      </div>\n\n      <input type=\"submit\" value=\"Save Task\" className=\"btn btn-block\" />\n    </form>\n  );\n};\n\nexport default AddTask;\n","import PropTypes from \"prop-types\";\n\nconst Button = ({ text, color, onClick }) => {\n  return (\n    <button\n      onClick={onClick}\n      style={{ backgroundColor: color }}\n      className=\"btn\"\n    >\n      {text}\n    </button>\n  );\n};\n\nButton.defaultProps = {\n  color: \"steelblue\",\n  text: \"Remove\",\n};\n\nButton.propTypes = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n  onClick: PropTypes.func,\n};\n\nexport default Button;\n","import PropTypes from \"prop-types\";\nimport { useLocation } from \"react-router-dom\";\nimport Button from \"./Button\";\n\nconst Header = ({ title, showAdd, onShowAdd }) => {\n  const location = useLocation();\n\n  return (\n    <header className=\"header\">\n      <h1>{title}</h1>\n      {location.pathname === `${process.env.PUBLIC_URL}/` && (\n        <Button\n          color={showAdd ? \"red\" : \"green\"}\n          text={showAdd ? \"Close\" : \"Add\"}\n          onClick={onShowAdd}\n        />\n      )}\n    </header>\n  );\n};\n\nHeader.defaultProps = {\n  title: \"Task Tracker\",\n};\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\n// CSS in JS\n// const headingStyle = {\n//   color: \"red\",\n//   backgroundColor: \"black\",\n// };\n\nexport default Header;\n","import { FaTimes } from \"react-icons/fa\";\n\nconst Task = ({ task, onDeleteTask, onToggleReminder }) => {\n  return (\n    <div\n      className={task.reminder ? \"task reminder\" : \"task\"}\n      onDoubleClick={() => onToggleReminder(task)}\n    >\n      <h3>\n        {task.text}\n        <FaTimes\n          style={{ color: \"red\", cursor: \"pointer\" }}\n          onClick={() => onDeleteTask(task.id)}\n        />\n      </h3>\n      <p>{task.day}</p>\n    </div>\n  );\n};\n\nexport default Task;\n","import Task from \"./Task\";\n\nconst Tasks = ({ tasks, onDeleteTask, onToggleReminder }) => {\n  return (\n    <>\n      {tasks.map((task) => (\n        <Task\n          key={task.id}\n          task={task}\n          onDeleteTask={onDeleteTask}\n          onToggleReminder={onToggleReminder}\n        />\n      ))}\n    </>\n  );\n};\n\nexport default Tasks;\n","import { Link } from \"react-router-dom\";\n\nconst Footer = () => {\n  return (\n    <footer>\n      <p>Copyright &copy; 2021</p>\n      <Link to={`${process.env.PUBLIC_URL}/about`}>About</Link>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import { Link } from \"react-router-dom\";\n\nconst About = () => {\n  return (\n    <div>\n      <h4>Version 1.0.0</h4>\n      <Link to={`${process.env.PUBLIC_URL}/`}>Go Back</Link>\n    </div>\n  );\n};\n\nexport default About;\n","import { useState, useEffect } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport axios from \"axios\";\nimport uniqid from \"uniqid\";\nimport { apiEndpoint } from \"./config\";\nimport AddTask from \"./components/AddTask\";\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport Footer from \"./components/Footer\";\nimport About from \"./components/About\";\n\nfunction App() {\n  const [showAdd, setShowAdd] = useState(false);\n  const [tasks, setTasks] = useState([]);\n\n  //***************************************************************************\n  //     LOAD TASKS from localStorage (works without DB)\n  //***************************************************************************\n\n  useEffect(() => {\n    const storageTasks = JSON.parse(localStorage.getItem(\"tasks\")) || [];\n    setTasks(storageTasks);\n    console.log(\"process.env.PUBLIC_URL:\", process.env.PUBLIC_URL);\n  }, []);\n\n  //***************************************************************************\n  //     LOAD TASKS from DB (works only locally after npm run server )\n  //***************************************************************************\n\n  // useEffect(() => {\n  //   const getTasks = async () => {\n  //     const { data: tasks } = await axios.get(apiEndpoint);\n  //     setTasks(tasks);\n  //   };\n\n  //   getTasks();\n  // }, []);\n\n  //***************************************************************************\n  //     ADD TASK to localStorage (works without DB)\n  //***************************************************************************\n\n  const handleAddTask = (task) => {\n    const newTasks = [...tasks, { ...task, id: uniqid() }];\n    localStorage.setItem(\"tasks\", JSON.stringify(newTasks));\n    setTasks(newTasks);\n  };\n\n  //***************************************************************************\n  //     ADD TASK to DB (works only locally after npm run server)\n  //***************************************************************************\n\n  // const handleAddTask = async (task) => {\n  //   const { data: newTask } = await axios.post(`${apiEndpoint}`, task);\n\n  //   const newTasks = [...tasks, newTask];\n  //   setTasks(newTasks);\n  // };\n\n  //***************************************************************************\n  //     DELETE TASK from localStorage (works without DB)\n  //***************************************************************************\n\n  const handleDeleteTask = (id) => {\n    const newTasks = tasks.filter((t) => t.id !== id);\n    localStorage.setItem(\"tasks\", JSON.stringify(newTasks));\n    setTasks(newTasks);\n  };\n\n  //***************************************************************************\n  //     DELETE TASK from DB (works only locally after npm run server)\n  //***************************************************************************\n\n  // const handleDeleteTask = async (id) => {\n  //   await axios.delete(`${apiEndpoint}/${id}`);\n\n  //   const newTasks = tasks.filter((t) => t.id !== id);\n  //   setTasks(newTasks);\n  // };\n\n  //***************************************************************************\n  //     TOGGLE REMINDER in localStorage (works without DB)\n  //***************************************************************************\n\n  const handleToggleReminder = (task) => {\n    const newTasks = [...tasks];\n    const index = tasks.indexOf(task);\n    newTasks[index] = { ...newTasks[index] };\n    newTasks[index].reminder = !newTasks[index].reminder;\n\n    localStorage.setItem(\"tasks\", JSON.stringify(newTasks));\n\n    setTasks(newTasks);\n  };\n\n  //***************************************************************************\n  //     TOGGLE REMINDER in DB (works only locally after npm run server)\n  //***************************************************************************\n\n  // const handleToggleReminder = async (task) => {\n  //   const newTasks = [...tasks];\n  //   const index = tasks.indexOf(task);\n  //   newTasks[index] = { ...newTasks[index] };\n  //   newTasks[index].reminder = !newTasks[index].reminder;\n\n  //   await axios.put(`${apiEndpoint}/${task.id}`, newTasks[index]);\n\n  //   setTasks(newTasks);\n  // };\n\n  return (\n    <div className=\"container\">\n      <Header\n        onShowAdd={() => {\n          setShowAdd(!showAdd);\n        }}\n        showAdd={showAdd}\n      />\n\n      <Route\n        path={`${process.env.PUBLIC_URL}/`}\n        exact\n        render={(props) => (\n          <>\n            {showAdd && <AddTask onAddTask={handleAddTask} />}\n            {tasks.length ? (\n              <Tasks\n                tasks={tasks}\n                onDeleteTask={handleDeleteTask}\n                onToggleReminder={handleToggleReminder}\n              />\n            ) : (\n              <p>There are no tasks to show</p>\n            )}\n          </>\n        )}\n      />\n      <Route path={`${process.env.PUBLIC_URL}/about`} component={About} />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}